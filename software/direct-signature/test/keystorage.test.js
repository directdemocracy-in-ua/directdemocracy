
var assert = require('assert');
var keystore = require('../js/keystore');

describe('keystore', () => {
	describe('import', () => {
		
		const SAMPLE_KEY_LENGTH = 256;
		/*
		 * This sample can be generated by following command via openssl
		 * openssl genrsa -out key.pem 256
		 */
		const SAMPLE_PRIVATE_KEY_IN_PKCS1_FORMAT = 
			"-----BEGIN RSA PRIVATE KEY-----" +
			"MIGtAgEAAiEAucCFwg+WM4A+F4pQrjTVbBP0v3/vTiILncekLZD5NmkCAwEAAQIh" +
			"AIE2mJVPLGf0/Lx5XfhhDlhpl05c7t74IdTFOxXytS6BAhEA5dF1XDb1ovNPbCjW" +
			"wFEDeQIRAM7p5RyZNXqXr6Y04y8innECEQCa0ELy38MRBj6WadxgqTJhAhEAjc5I" +
			"4i+yMiGRFPS8Goq8UQIRAJu7F81dpRIn4/5z+0y/0l0=" +
			"-----END RSA PRIVATE KEY-----";
		
		describe('PKCS1', ()=> {
			it('importAsObject', () => {
				var keyStore = keystore.importPKCS8(SAMPLE_PRIVATE_KEY_IN_PKCS1_FORMAT);
				assert.ok(keyStore);
			});
			
			it('length equals 256', () => {
				var keyStore = keystore.importPKCS8(SAMPLE_PRIVATE_KEY_IN_PKCS1_FORMAT);
				assert.equal(keyStore.getLength(), SAMPLE_KEY_LENGTH);
			});
			
			it('encrypt string', () => {
				var keyStore = keystore.importPKCS8(SAMPLE_PRIVATE_KEY_IN_PKCS1_FORMAT);
				assert.equal(keyStore.getLength(), SAMPLE_KEY_LENGTH);
			});
		});
	});
});